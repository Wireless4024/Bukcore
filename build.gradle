import org.apache.tools.ant.filters.ReplaceTokens

plugins {
    id "org.jetbrains.kotlin.jvm" version "1.3.72"
}

apply plugin: 'java'
apply plugin: 'kotlin'

group = 'com.wireless4024.mc'
version = '0.1.1'

sourceCompatibility = '1.8'
targetCompatibility = '1.8'

repositories {
    mavenCentral()
    maven {
        name = 'spigotmc-repo'
        url = 'https://hub.spigotmc.org/nexus/content/repositories/snapshots/'
    }
    maven {
        name = 'sk89q-repo'
        url = 'https://maven.enginehub.org/repo/'
    }
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}
task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}
task fatJar(type: Jar, dependsOn: jar) {
    classifier = 'full'
    // from(sourceSets.main.resources)
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() || !it.name.endsWith('.jar') ? it : zipTree(it) }
    }
    with jar
}

artifacts {
    archives sourcesJar
    archives javadocJar
}

/********************************/
// path to compile full package
def powernbt = "libs/PowerNBT.jar"
if (!new File(powernbt).exists()) {
    throw new RuntimeException("please download PowerNBT at https://www.spigotmc.org/resources/powernbt.9098/download?version=185893 and put in folder libs before compile")
}
// if compile error please download here :
// https://www.spigotmc.org/resources/powernbt.9098/download?version=185893

def worldguard = "libs/WorldGuard.jar"
/********************************/

dependencies {
    compileOnly 'org.bukkit:bukkit:1.12-R0.1-SNAPSHOT'
    compileOnly 'com.sk89q.worldedit:worldedit-bukkit:6.1.5'
    compileOnly files(powernbt)
    /*if (!new File(bukkit1_12).exists()) {
        logger.info("downloading bukkit 1.12.2 ...")
        new URL('https://cdn.getbukkit.org/craftbukkit/craftbukkit-1.12.2.jar')
                .withInputStream { i -> new File(bukkit1_12).withOutputStream { it << i } }
        logger.info("done.")
    }
    compileOnly files(bukkit1_12)*/
    if (!new File(worldguard).exists()) {
        logger.info("downloading worldguard...")
        new URL('https://media.forgecdn.net/files/2610/618/worldguard-bukkit-6.2.2.jar')
                .withInputStream { i -> new File(worldguard).withOutputStream { it << i } }
        logger.info("done.")
    }
    compileOnly files(worldguard)
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.3.72"
    //  implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.8'
}

processResources {
    from(sourceSets.main.resources.srcDirs) {
        filter ReplaceTokens, tokens: [version: version]
    }
}
compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}
compileTestKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

task all {
    dependsOn 'jar'
    dependsOn 'fatJar'
    dependsOn 'sourcesJar'
}
task jarTo {
    dependsOn 'clean'
    dependsOn 'fatJar'
    doLast {
        if (project.hasProperty('to')) {
            if (copy {
                from(fatJar.archivePath)
                into(to)
            }.didWork)
                print("ok?")
            else {
                print("didn't?")
            }
        }
    }
}